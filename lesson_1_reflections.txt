__How did viewing a diff between two versions of a file help you see the bug that was introduced?__ diff help narrow down where the typo occurred because it only shows the differences in the two files.

**How could having easy access to the entire history of a file make you a more efficient programmer in the long term?** It makes you a more efficient programmer because you can go back to previous versions in case you decide the current version of file is not the correct solution.

**What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?**

Pros:
- Better control of what is included in commits.

Cons:
- You have to figure out when it's best to create a commit.

**Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?** Keeping track of multiple files takes more resouces especially when this involves keeping copies of files.
Git only keep track of changes so it can keep track of multiple files without the added overhead.

**How can you use the commands git log and git diff to view the history of files?** log shows the history of a repository through it's commits. diff will show the differences between two commits in a repository.

**How might using version control make you more confident to make changes that could break something?** It's easier to try new code, knowing it might break, knowing that you can easily revert to a previous version if needed.
**Now that you have your workspace set up, what do you want to try using Git for?** Autocompleting file paths.
